# —— Inspired by 💡———————————————————————————————————————————————————————————————
# https://www.strangebuzz.com/en/blog/setting-a-ci-cd-workflow-for-a-symfony-project-thanks-to-the-github-actions

# Setup ————————————————————————————————————————————————————————————————————————
name: Full CI process for Symfony 5 Guestbook
on:
  push:
    branches:
      - master
      - dev
env:
  ES_HTTP_PORT: 9209
jobs:
  symfony:
    name: Symfony 5.2 (PHP ${{ matrix.php-versions }})
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-18.04
    services:
      # https://docs.docker.com/samples/library/mysql/
      database:
        image: 'postgres:11-alpine'
        environment:
          POSTGRES_PASSWORD: main
          POSTGRES_USER: main
          POSTGRES_DB: main
        ports:
          # To allow the host machine to access the ports below, modify the lines below.
          # For example, to allow the host to connect to port 3306 on the container, you would change
          # "3306" to "3306:3306". Where the first port is exposed to the host and the second is the container port.
          # See https://docs.docker.com/compose/compose-file/#ports for more information.
          - '5432'
        redis:
          image: redis:5-alpine
          ports: [ 6379 ]

        rabbitmq:
          image: rabbitmq:3.7-management
          ports: [ 5672, 15672 ]

        mailer:
          image: schickling/mailcatcher
          ports: [ 1025, 1080 ]
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4'] #, '8.0' fails on Doctrine # PHP Fatal error:  Declaration of Doctrine\DBAL\Driver\PDOConnection::query() must be compatible with PDO::query(string $statement, ?int $fetch_mode = null, mixed ...$fetch_mode_args) in /home/runner/work/strangebuzz.com/strangebuzz.com/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php on line 81
    steps:
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true

      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: make install

      # —— Symfony 🎵 ——————————————————————————————————————————————————————————
      - name: Check Symfony requirements
        run: vendor/bin/requirements-checker

      - name: Check the Symfony console
        run: bin/console -V

      ## —— Coding standards 🎨 ————————————————————————————————————————————————
      - name: Coding standards checks (php_codesniffer + PHPStan)
        run: make cs

      ## —— Tests ✅ ———————————————————————————————————————————————————————————
      - name: Load Doctrine fixtures
        run: make load-fixtures

      - name: Run functionnal and unit tests
        run: make tests